{\rtf1\ansi\ansicpg1252\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red79\green123\blue61;\red26\green26\blue41;\red172\green172\blue193;
\red70\green137\blue204;\red212\green212\blue212;\red167\green197\blue152;\red45\green175\blue118;\red237\green114\blue173;
\red140\green108\blue11;\red13\green102\blue149;\red187\green97\blue44;\red194\green126\blue101;\red253\green181\blue13;
\red31\green133\blue64;}
{\*\expandedcolortbl;;\cssrgb\c37647\c54510\c30588;\cssrgb\c13333\c13725\c21176;\cssrgb\c72941\c73333\c80000;
\cssrgb\c33725\c61176\c83922;\cssrgb\c86275\c86275\c86275;\cssrgb\c70980\c80784\c65882;\cssrgb\c19608\c72941\c53725;\cssrgb\c95294\c54118\c73333;
\cssrgb\c61961\c49412\c3137;\cssrgb\c0\c47843\c65098;\cssrgb\c78824\c45882\c22353;\cssrgb\c80784\c56863\c47059;\cssrgb\c100000\c75686\c2745;
\cssrgb\c12941\c58039\c31765;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 // SPDX-License-Identifier: GPL-3.0\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 pragma\cf4 \strokec4  \cf5 \strokec5 solidity\cf4 \strokec4  \cf6 \strokec6 >=\cf7 \strokec7 0.7.0\cf4 \strokec4  \cf6 \strokec6 <\cf7 \strokec7 0.9.0\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 /** \cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @title Ballot\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  * @dev Implements voting process along with vote delegation\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 contract\cf4 \strokec4  Ballot \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3    \cb1 \
\cb3     \cf5 \strokec5 struct\cf4 \strokec4  Voter \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint\cf4 \strokec4  weight\cf6 \strokec6 ;\cf4 \strokec4  \cf2 \strokec2 // weight is accumulated by delegation\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bool\cf4 \strokec4  voted\cf6 \strokec6 ;\cf4 \strokec4   \cf2 \strokec2 // if true, that person already voted\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 address\cf4 \strokec4  delegate\cf6 \strokec6 ;\cf4 \strokec4  \cf2 \strokec2 // person delegated to\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint\cf4 \strokec4  vote\cf6 \strokec6 ;\cf4 \strokec4    \cf2 \strokec2 // index of the voted proposal\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 struct\cf4 \strokec4  Proposal \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // If you can limit the length to a certain number of bytes, \cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // always use one of bytes1 to bytes32 because they are much cheaper\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 bytes32\cf4 \strokec4  name\cf6 \strokec6 ;\cf4 \strokec4    \cf2 \strokec2 // short name (up to 32 bytes)\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint\cf4 \strokec4  voteCount\cf6 \strokec6 ;\cf4 \strokec4  \cf2 \strokec2 // number of accumulated votes\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 address\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  chairperson\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf5 \strokec5 mapping\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  => Voter\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  voters\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3     Proposal\cf6 \strokec6 []\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  proposals\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 /** \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Create a new ballot to choose one of 'proposalNames'.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @param proposalNames names of proposals\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf9 \strokec9 constructor\cf6 \strokec6 (\cf5 \strokec5 bytes32\cf6 \strokec6 []\cf4 \strokec4  \cf10 \strokec10 memory\cf4 \strokec4  proposalNames\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         chairperson \cf6 \strokec6 =\cf4 \strokec4  \cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         voters\cf6 \strokec6 [\cf4 \strokec4 chairperson\cf6 \strokec6 ].\cf4 \strokec4 weight \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 1\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf12 \strokec12 for\cf4 \strokec4  \cf6 \strokec6 (\cf5 \strokec5 uint\cf4 \strokec4  i \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 0\cf6 \strokec6 ;\cf4 \strokec4  i \cf6 \strokec6 <\cf4 \strokec4  proposalNames\cf6 \strokec6 .\cf4 \strokec4 length\cf6 \strokec6 ;\cf4 \strokec4  i\cf6 \strokec6 ++)\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // 'Proposal(\{...\})' creates a temporary\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // Proposal object and 'proposals.push(...)'\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // appends it to the end of 'proposals'.\cf4 \cb1 \strokec4 \
\cb3             proposals\cf6 \strokec6 .\cf4 \strokec4 push\cf6 \strokec6 (\cf4 \strokec4 Proposal\cf6 \strokec6 (\{\cf4 \cb1 \strokec4 \
\cb3                 name\cf6 \strokec6 :\cf4 \strokec4  proposalNames\cf6 \strokec6 [\cf4 \strokec4 i\cf6 \strokec6 ],\cf4 \cb1 \strokec4 \
\cb3                 voteCount\cf6 \strokec6 :\cf4 \strokec4  \cf7 \strokec7 0\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 \}));\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cb1 \
\cb3     \cf2 \strokec2 /** \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Give 'voter' the right to vote on this ballot. May only be called by 'chairperson'.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @param voter address of voter\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  giveRightToVote\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  voter\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender \cf6 \strokec6 ==\cf4 \strokec4  chairperson\cf6 \strokec6 ,\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 "Only chairperson can give right to vote."\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 !\cf4 \strokec4 voters\cf6 \strokec6 [\cf4 \strokec4 voter\cf6 \strokec6 ].\cf4 \strokec4 voted\cf6 \strokec6 ,\cf4 \cb1 \strokec4 \
\cb3             \cf13 \strokec13 "The voter already voted."\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 voters\cf6 \strokec6 [\cf4 \strokec4 voter\cf6 \strokec6 ].\cf4 \strokec4 weight \cf6 \strokec6 ==\cf4 \strokec4  \cf7 \strokec7 0\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         voters\cf6 \strokec6 [\cf4 \strokec4 voter\cf6 \strokec6 ].\cf4 \strokec4 weight \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 1\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Delegate your vote to the voter 'to'.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @param to address to which vote is delegated\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  delegate\cf6 \strokec6 (\cf5 \strokec5 address\cf4 \strokec4  to\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         Voter \cf10 \strokec10 storage\cf4 \strokec4  sender \cf6 \strokec6 =\cf4 \strokec4  voters\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ];\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (!\cf4 \strokec4 sender\cf6 \strokec6 .\cf4 \strokec4 voted\cf6 \strokec6 ,\cf4 \strokec4  \cf13 \strokec13 "You already voted."\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 to \cf6 \strokec6 !=\cf4 \strokec4  \cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ,\cf4 \strokec4  \cf13 \strokec13 "Self-delegation is disallowed."\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\
\cb3         \cf12 \strokec12 while\cf4 \strokec4  \cf6 \strokec6 (\cf4 \strokec4 voters\cf6 \strokec6 [\cf4 \strokec4 to\cf6 \strokec6 ].\cf4 \strokec4 delegate \cf6 \strokec6 !=\cf4 \strokec4  \cf5 \strokec5 address\cf6 \strokec6 (\cf7 \strokec7 0\cf6 \strokec6 ))\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3             to \cf6 \strokec6 =\cf4 \strokec4  voters\cf6 \strokec6 [\cf4 \strokec4 to\cf6 \strokec6 ].\cf4 \strokec4 delegate\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3             \cf2 \strokec2 // We found a loop in the delegation, not allowed.\cf4 \cb1 \strokec4 \
\cb3             \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 to \cf6 \strokec6 !=\cf4 \strokec4  \cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ,\cf4 \strokec4  \cf13 \strokec13 "Found loop in delegation."\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3         sender\cf6 \strokec6 .\cf4 \strokec4 voted \cf6 \strokec6 =\cf4 \strokec4  \cf5 \strokec5 true\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         sender\cf6 \strokec6 .\cf4 \strokec4 delegate \cf6 \strokec6 =\cf4 \strokec4  to\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         Voter \cf10 \strokec10 storage\cf4 \strokec4  delegate_ \cf6 \strokec6 =\cf4 \strokec4  voters\cf6 \strokec6 [\cf4 \strokec4 to\cf6 \strokec6 ];\cf4 \cb1 \strokec4 \
\cb3         \cf14 \strokec14 if\cf4 \strokec4  \cf6 \strokec6 (\cf4 \strokec4 delegate_\cf6 \strokec6 .\cf4 \strokec4 voted\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // If the delegate already voted,\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // directly add to the number of votes\cf4 \cb1 \strokec4 \
\cb3             proposals\cf6 \strokec6 [\cf4 \strokec4 delegate_\cf6 \strokec6 .\cf4 \strokec4 vote\cf6 \strokec6 ].\cf4 \strokec4 voteCount \cf6 \strokec6 +=\cf4 \strokec4  sender\cf6 \strokec6 .\cf4 \strokec4 weight\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 \}\cf4 \strokec4  \cf14 \strokec14 else\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // If the delegate did not vote yet,\cf4 \cb1 \strokec4 \
\cb3             \cf2 \strokec2 // add to her weight.\cf4 \cb1 \strokec4 \
\cb3             delegate_\cf6 \strokec6 .\cf4 \strokec4 weight \cf6 \strokec6 +=\cf4 \strokec4  sender\cf6 \strokec6 .\cf4 \strokec4 weight\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 /**\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Give your vote (including votes delegated to you) to proposal 'proposals[proposal].name'.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @param proposal index of proposal in the proposals array\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  vote\cf6 \strokec6 (\cf5 \strokec5 uint\cf4 \strokec4  proposal\cf6 \strokec6 )\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         Voter \cf10 \strokec10 storage\cf4 \strokec4  sender \cf6 \strokec6 =\cf4 \strokec4  voters\cf6 \strokec6 [\cf11 \strokec11 msg\cf6 \strokec6 .\cf4 \strokec4 sender\cf6 \strokec6 ];\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (\cf4 \strokec4 sender\cf6 \strokec6 .\cf4 \strokec4 weight \cf6 \strokec6 !=\cf4 \strokec4  \cf7 \strokec7 0\cf6 \strokec6 ,\cf4 \strokec4  \cf13 \strokec13 "Has no right to vote"\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         \cf11 \strokec11 require\cf6 \strokec6 (!\cf4 \strokec4 sender\cf6 \strokec6 .\cf4 \strokec4 voted\cf6 \strokec6 ,\cf4 \strokec4  \cf13 \strokec13 "Already voted."\cf6 \strokec6 );\cf4 \cb1 \strokec4 \
\cb3         sender\cf6 \strokec6 .\cf4 \strokec4 voted \cf6 \strokec6 =\cf4 \strokec4  \cf5 \strokec5 true\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         sender\cf6 \strokec6 .\cf4 \strokec4 vote \cf6 \strokec6 =\cf4 \strokec4  proposal\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\
\cb3         \cf2 \strokec2 // If 'proposal' is out of the range of the array,\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // this will throw automatically and revert all\cf4 \cb1 \strokec4 \
\cb3         \cf2 \strokec2 // changes.\cf4 \cb1 \strokec4 \
\cb3         proposals\cf6 \strokec6 [\cf4 \strokec4 proposal\cf6 \strokec6 ].\cf4 \strokec4 voteCount \cf6 \strokec6 +=\cf4 \strokec4  sender\cf6 \strokec6 .\cf4 \strokec4 weight\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 /** \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Computes the winning proposal taking all previous votes into account.\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @return winningProposal_ index of winning proposal in the proposals array\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  winningProposal\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3             \cf15 \strokec15 returns\cf4 \strokec4  \cf6 \strokec6 (\cf5 \strokec5 uint\cf4 \strokec4  winningProposal_\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         \cf5 \strokec5 uint\cf4 \strokec4  winningVoteCount \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 0\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3         \cf12 \strokec12 for\cf4 \strokec4  \cf6 \strokec6 (\cf5 \strokec5 uint\cf4 \strokec4  p \cf6 \strokec6 =\cf4 \strokec4  \cf7 \strokec7 0\cf6 \strokec6 ;\cf4 \strokec4  p \cf6 \strokec6 <\cf4 \strokec4  proposals\cf6 \strokec6 .\cf4 \strokec4 length\cf6 \strokec6 ;\cf4 \strokec4  p\cf6 \strokec6 ++)\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3             \cf14 \strokec14 if\cf4 \strokec4  \cf6 \strokec6 (\cf4 \strokec4 proposals\cf6 \strokec6 [\cf4 \strokec4 p\cf6 \strokec6 ].\cf4 \strokec4 voteCount \cf6 \strokec6 >\cf4 \strokec4  winningVoteCount\cf6 \strokec6 )\cf4 \strokec4  \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3                 winningVoteCount \cf6 \strokec6 =\cf4 \strokec4  proposals\cf6 \strokec6 [\cf4 \strokec4 p\cf6 \strokec6 ].\cf4 \strokec4 voteCount\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3                 winningProposal_ \cf6 \strokec6 =\cf4 \strokec4  p\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3         \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\
\cb3     \cf2 \strokec2 /** \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2      * @dev Calls winningProposal() function to get the index of the winner contained in the proposals array and then\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      * @return winnerName_ the name of the winner\cf4 \cb1 \strokec4 \
\cf2 \cb3 \strokec2      */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 function\cf4 \strokec4  winnerName\cf6 \strokec6 ()\cf4 \strokec4  \cf8 \strokec8 public\cf4 \strokec4  \cf8 \strokec8 view\cf4 \cb1 \strokec4 \
\cb3             \cf15 \strokec15 returns\cf4 \strokec4  \cf6 \strokec6 (\cf5 \strokec5 bytes32\cf4 \strokec4  winnerName_\cf6 \strokec6 )\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \{\cf4 \cb1 \strokec4 \
\cb3         winnerName_ \cf6 \strokec6 =\cf4 \strokec4  proposals\cf6 \strokec6 [\cf4 \strokec4 winningProposal\cf6 \strokec6 ()].\cf4 \strokec4 name\cf6 \strokec6 ;\cf4 \cb1 \strokec4 \
\cb3     \cf6 \strokec6 \}\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 \}\cf4 \cb1 \strokec4 \
\
}